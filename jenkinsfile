// This shows a simple example of how to archive the build output artifacts.
node {
        stage('SCM'){
                git branch: 'development', url: 'https://github.com/manfer993/portafolio.git'
        }
        stage('Install node modules'){
                sh "npm install"
        }
        stage('Build project'){
                sh "npm run build"
        }
        stage('Scan project') {
                def scannerHome = tool name: 'sonarqube 3.3.0', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                withSonarQubeEnv('sonarqube_dev') {
                        sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=test_NodeJs_Pipeline \
                        -Dsonar.projectName=test_NodeJs_Pipeline \
                        -Dsonar.projectVersion=0.1 \
                        -Dsonar.sourceEncoding=UTF-8 \
                        -Dsonar.sources=src \
                        -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/dist/**,**/docs/**,**/*.js,**/e2e/**,**/coverage/** \
                        -Dsonar.test=src/app \
                        -Dsonar.test.inclusions=**/*.spec.ts \
                        -Dsonar.ts.tslint.configPath=tslint.json "  
                }
        }
        stage('Push image') {
                docker.withRegistry( '', 'dockerHub' ) {
                        def dockerImage = docker.build("ferman18/nodejs_app_dev:${BUILD_NUMBER}")
                        dockerImage.push()
                }
        }
        // stage('docker build/push') {
        //         docker.withRegistry('https://registry.hub.docker.com', ){
        //                 def app = docker.build(":${BUILD_NUMBER}", '.')
        //                 app.push()
        //         }
        // }
        stage('Validate container existence'){
                sh "if docker ps -a | grep portafolioDev; then docker stop portafolioDev && docker rm portafolioDev; fi"
                sh "sleep 5"
        }
        stage('Create container'){               
                sh "docker run -d -p 8085:80 --name portafolioDev ferman18/nodejs_app_dev:${BUILD_NUMBER}"
        }

}
